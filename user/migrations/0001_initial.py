<<<<<<< HEAD
# Generated by Django 2.0.6 on 2018-08-03 13:27
=======
# Generated by Django 2.0.6 on 2018-08-03 07:03
>>>>>>> 5a6417ad1b13a1eac42c5d86144e0fbfe09bfea6

import datetime
from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('article', '0001_initial'),
        ('section', '0001_initial'),
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='common_member',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=30, unique=True)),
                ('stu_num', models.CharField(max_length=10, null=True)),
                ('login_times', models.IntegerField(default=0)),
                ('department', models.CharField(choices=[('000', '少年班学院'), ('001', '数学科学院'), ('203', '物理学院'), ('204', '管理学院'), ('206', '化学学院'), ('210', '信息科学技术学院'), ('215', '计算机科学与技术学院'), ('jwc', '教务处')], max_length=30, null=True)),
                ('birthday', models.DateField(default=datetime.date.today)),
<<<<<<< HEAD
                ('slug', models.SlugField(allow_unicode=True, default='django-db-models-fields-CharField', max_length=100)),
=======
                ('slug', models.SlugField(allow_unicode=True, default='django-db-models-fields-charfield', max_length=100)),
>>>>>>> 5a6417ad1b13a1eac42c5d86144e0fbfe09bfea6
                ('portrait', models.ImageField(blank=True, null=True, upload_to='portraits')),
                ('temp_portrait', models.ImageField(blank=True, null=True, upload_to='portraits')),
                ('points', models.IntegerField(default=0)),
                ('gender', models.CharField(choices=[('m', '男'), ('f', '女')], default='m', max_length=1)),
                ('show_gender', models.BooleanField(default=True)),
                ('profile', models.CharField(default='', max_length=280)),
                ('email_status', models.BooleanField(default=False)),
                ('posts', models.IntegerField(default=0)),
                ('following', models.IntegerField(default=0)),
                ('followed', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='commom_member_watch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('watch_time', models.DateTimeField(auto_now_add=True)),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='section.SectionForum')),
                ('uid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='common_member_action_log',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_school_info', models.BooleanField(default=False)),
                ('action', models.CharField(choices=[('post', '发表'), ('star', '收藏'), ('upload', '上传')], max_length=10)),
                ('dateline', models.DateTimeField(auto_now=True)),
                ('pid', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='article.ArticlePost')),
                ('uid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='common_member_email_send_time',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_time', models.IntegerField(default=0)),
                ('last_send_time', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='common_member_field_forum',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('groupterms', models.CharField(choices=[('ST', 'student'), ('TE', 'teacher')], default='ST', max_length=2)),
                ('uid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='common_member_star',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_school_info', models.BooleanField(default=False)),
                ('star_time', models.DateTimeField(auto_now_add=True)),
                ('pid', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='article.ArticlePost')),
                ('uid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='follower_pair',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('follow_time', models.DateTimeField(auto_now=True)),
                ('by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='follower_pair_by', to=settings.AUTH_USER_MODEL)),
                ('followed', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='follower_pair_followed', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='member_crime',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.TextField()),
                ('dateline', models.DateTimeField(auto_now_add=True)),
                ('action', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.common_member_action_log')),
                ('uid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='section_follow_pair',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('follower_time', models.DateTimeField(auto_now=True)),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='section.SectionForum')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='common_member',
            name='followers',
            field=models.ManyToManyField(through='user.follower_pair', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='common_member',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='common_member',
            name='section_followed',
            field=models.ManyToManyField(through='user.section_follow_pair', to='section.SectionForum'),
        ),
        migrations.AddField(
            model_name='common_member',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
